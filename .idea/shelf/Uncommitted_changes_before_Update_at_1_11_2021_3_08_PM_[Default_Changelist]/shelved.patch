Index: app/src/main/java/com/example/ubet/fragments/MatchesFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ubet.fragments;\r\n\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.LinearInterpolator;\r\nimport android.view.animation.RotateAnimation;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.example.ubet.Classes.HeaderItem;\r\nimport com.example.ubet.Classes.UserBet;\r\nimport com.example.ubet.R;\r\nimport com.example.ubet.adapters.MatchesAdapter;\r\nimport com.example.ubet.customLayout.BottomSheetLayout;\r\nimport com.example.ubet.models.Game;\r\nimport com.example.ubet.models.Response;\r\nimport com.example.ubet.viewmodels.BetsViewModel;\r\nimport com.example.ubet.viewmodels.MatchesViewModel;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MatchesFragment extends Fragment  {\r\n    MatchesViewModel matchesViewModel;\r\n    TextView textView;\r\n    RecyclerView rvMatches;\r\n    List<Object> list;\r\n    List<Game> liveGames;\r\n    List<Game> upcomingGames;\r\n    MatchesAdapter currentMatchesAdapter;\r\n    List<HeaderItem> headers;\r\n    ImageView userBetsButton;\r\n    boolean layoutUp;\r\n    private BetsViewModel betsViewModel;\r\n    List<UserBet> userBets;\r\n    ImageView soccerBall;\r\n    RelativeLayout rvRelativeLayout;\r\n    SwipeRefreshLayout matchesSwipeRefreshLayout;\r\n    BottomSheetLayout bottomSheet;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.matches_fragment, container, false);\r\n\r\n        headers = new ArrayList<HeaderItem>();\r\n        headers.add(new HeaderItem(\"Live\"));\r\n        headers.add(new HeaderItem(\"Upcoming\"));\r\n\r\n        list = new ArrayList<Object>();\r\n        layoutUp = false;\r\n        rvMatches = (RecyclerView) view.findViewById(R.id.matchesRecyclerView);\r\n        userBetsButton = (ImageView) view.findViewById(R.id.userBetsButton);\r\n        userBets = new ArrayList<UserBet>();\r\n        soccerBall = (ImageView) view.findViewById(R.id.soccerBall);\r\n        rvRelativeLayout = (RelativeLayout) view.findViewById(R.id.relativeLayoutRecyclerView);\r\n        matchesSwipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.matchesSwipeRefreshLayout);\r\n\r\n\r\n        FragmentManager fm = getChildFragmentManager();\r\n\r\n        ArrayList<UserBet> userBets = new ArrayList<UserBet>();\r\n\r\n        soccerBall.setVisibility(View.VISIBLE);\r\n        loadingAnimation(soccerBall);\r\n\r\n        betsViewModel = new ViewModelProvider(requireActivity()).get(BetsViewModel.class);\r\n        betsViewModel.getUserBet().observe(getViewLifecycleOwner(), new Observer<UserBet>() {\r\n                    @Override\r\n                    public void onChanged(UserBet userBet) {\r\n                        userBets.add(userBet);\r\n                    }\r\n                });\r\n\r\n                userBetsButton.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        rotateOpen(v);\r\n                        UserBetsDialogFragment betsFragment = UserBetsDialogFragment.newInstance(userBets);\r\n                        betsFragment.show(getChildFragmentManager(), \"Bets Fragment\");\r\n                    }\r\n                });\r\n\r\n        matchesViewModel = new MatchesViewModel();\r\n        String token = getToken();\r\n        matchesViewModel.getMatches(token).observe(getViewLifecycleOwner(), new Observer<Response>() {\r\n            @Override\r\n            public void onChanged(Response response) {\r\n                soccerBall.clearAnimation();\r\n                soccerBall.setVisibility(View.GONE);\r\n                rvRelativeLayout.setVisibility(View.VISIBLE);\r\n\r\n                setGames(response);\r\n                setMatchesAdapter();\r\n\r\n                matchesSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        matchesViewModel.getMatches(token).observe(getViewLifecycleOwner(), new Observer<Response>() {\r\n                            @Override\r\n                            public void onChanged(Response response) {\r\n                                matchesSwipeRefreshLayout.setRefreshing(false);\r\n                                currentMatchesAdapter.clearItems();\r\n\r\n                                setGames(response);\r\n                                setMatchesAdapter();\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    private void setGames(Response response) {\r\n        setObjectsList(response.getLive(), response.getUpcoming(), headers);\r\n        liveGames = response.getLive();\r\n        upcomingGames = response.getUpcoming();\r\n    }\r\n\r\n    private void setMatchesAdapter() {\r\n        currentMatchesAdapter = new MatchesAdapter(list, new MatchesAdapter.ClickListener() {\r\n            @Override\r\n            public void onCoefClick(View buttonClicked, int position, MatchesAdapter.ButtonType type) {\r\n                bottomSheet = new BottomSheetLayout();\r\n                showBottomSheet(type, position, bottomSheet);\r\n            }\r\n        });\r\n        rvMatches.setAdapter(currentMatchesAdapter);\r\n        rvMatches.scheduleLayoutAnimation();\r\n        rvMatches.setLayoutManager(new LinearLayoutManager(getContext()));\r\n    }\r\n    private void setObjectsList(List<Game> liveGames, List<Game> upcomingGames,  List<HeaderItem> headers) {\r\n\r\n        List<List<Game>> games = new ArrayList<List<Game>>();\r\n        games.add(liveGames);\r\n        games.add(upcomingGames);\r\n\r\n        for(int count = 0; count < headers.size(); count++) {\r\n            list.add(headers.get(count));\r\n            for(int i = 0; i < liveGames.size(); i++) {\r\n                list.add(games.get(count).get(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    private void showBottomSheet(MatchesAdapter.ButtonType type, int positionInList, BottomSheetLayout bottomSheet) {\r\n        Bundle bundle = new Bundle();\r\n        int exactPosition = 0;\r\n        List<Game> clickedGamesList = null;\r\n        if (positionInList <= liveGames.size() && positionInList > 0) {\r\n            exactPosition = positionInList - 1;\r\n            clickedGamesList = new ArrayList<>(liveGames);\r\n        } else if (positionInList > liveGames.size()) {\r\n            exactPosition = positionInList - liveGames.size() - 2;\r\n            clickedGamesList = new ArrayList<>(upcomingGames);\r\n        }\r\n        switch(type) {\r\n            case FIRSTTEAMCOEF:\r\n                bundle.putString(\"team\", clickedGamesList.get(exactPosition).getFirstTeam());\r\n                bundle.putDouble(\"coef\", clickedGamesList.get(exactPosition).getFirstTeamCoef());\r\n                break;\r\n            case SECONDTEAMCOEF:\r\n                bundle.putString(\"team\", clickedGamesList.get(exactPosition).getSecondTeam());\r\n                bundle.putDouble(\"coef\", clickedGamesList.get(exactPosition).getSecondTeamCoef());\r\n                break;\r\n            case DRAW:\r\n                bundle.putString(\"team\", \"Draw\");\r\n                bundle.putDouble(\"coef\", clickedGamesList.get(exactPosition).getDrawCoef());\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        bottomSheet.setArguments(bundle);\r\n        bottomSheet.show(getChildFragmentManager(), \"ModalBottomSheet\");\r\n    }\r\n\r\n    private void rotateOpen(View view) {\r\n        RotateAnimation rotate = new RotateAnimation(0, 180, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);\r\n        rotate.setDuration(300);\r\n        rotate.setInterpolator(new LinearInterpolator());\r\n        view.startAnimation(rotate);\r\n    }\r\n\r\n    private void rotateClose(View view) {\r\n        RotateAnimation rotate = new RotateAnimation(180, 0, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);\r\n        rotate.setDuration(300);\r\n        rotate.setInterpolator(new LinearInterpolator());\r\n        view.startAnimation(rotate);\r\n    }\r\n\r\n    private void isDialogOpen(UserBetsDialogFragment dialogFragment, View v) {\r\n\r\n        if (dialogFragment != null\r\n                && dialogFragment.getDialog() != null\r\n                && dialogFragment.getDialog().isShowing()\r\n                && !dialogFragment.isRemoving()) {\r\n        } else {\r\n            rotateClose(v);\r\n        }\r\n    }\r\n\r\n    private void loadingAnimation(View view) {\r\n        RotateAnimation rotate = new RotateAnimation(0, 360, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);\r\n        rotate.setDuration(1500);\r\n        rotate.setRepeatCount(Animation.INFINITE);\r\n        rotate.setFillAfter(true);\r\n\r\n        view.startAnimation(rotate);\r\n    }\r\n\r\n    private String getToken() {\r\n        SharedPreferences prefs = getActivity().getSharedPreferences(\"sharedPrefs\", Context.MODE_PRIVATE);\r\n        String token = prefs.getString(\"token\", null);\r\n        return token;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ubet/fragments/MatchesFragment.java	(revision 9097f3db305f8ce8067088b2401e5edfd26e5ff5)
+++ app/src/main/java/com/example/ubet/fragments/MatchesFragment.java	(date 1610347573486)
@@ -154,7 +154,7 @@
 
         for(int count = 0; count < headers.size(); count++) {
             list.add(headers.get(count));
-            for(int i = 0; i < liveGames.size(); i++) {
+            for(int i = 0; i < games.get(count).size(); i++) {
                 list.add(games.get(count).get(i));
             }
         }
